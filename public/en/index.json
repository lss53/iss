[{"categories":["hobby"],"content":"A short guide to getting started with Git, without too much jargon.","date":"2024-03-01","objectID":"/en/hello-git/","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/"},{"categories":["hobby"],"content":"A short guide to getting started with Git, without too much jargon. ","date":"2024-03-01","objectID":"/en/hello-git/:0:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#"},{"categories":["hobby"],"content":"\r1 Installation Download Git for OSX Download Git for Windows Download Git for Linux ","date":"2024-03-01","objectID":"/en/hello-git/:1:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#installation"},{"categories":["hobby"],"content":"\r2 Creating a New RepositoryCreate a new folder, open it, then run: git init create a new git repository. ","date":"2024-03-01","objectID":"/en/hello-git/:2:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#creating-a-new-repository"},{"categories":["hobby"],"content":"\r3 Cloning a RepositoryRun the following command to create a local clone of a repository: git clone /path/to/repository If the repository is on a remote server, your command will look something like this: git clone username@host:/path/to/repository ","date":"2024-03-01","objectID":"/en/hello-git/:3:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#cloning-a-repository"},{"categories":["hobby"],"content":"\r4 WorkflowYour local repository consists of three “trees” maintained by git. The first is your working directory, which holds the actual files; the second is the index (or staging area), which acts as a buffer zone temporarily holding your changes; and finally HEAD, which points to the result of your last commit. ","date":"2024-03-01","objectID":"/en/hello-git/:4:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#workflow"},{"categories":["hobby"],"content":"\r5 Adding and CommittingYou can stage changes (add them to the index) using the following command: git add \u003cfilename\u003e git add * This is the first step in the basic git workflow; use the following command to actually commit your changes: git commit -m \"commit message\" Now your changes are committed to HEAD, but not yet on your remote repository. ","date":"2024-03-01","objectID":"/en/hello-git/:5:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#adding-and-committing"},{"categories":["hobby"],"content":"\r6 Pushing ChangesYour changes are now in HEAD on your local repository. Run the following command to push these changes to the remote repository: git push origin main You can replace main with any branch you want to push to. If you haven’t already cloned an existing repository, and want to connect your repository to a remote, you can add one using the following command: git remote add origin \u003cserver\u003e Now you will be able to push your changes to the server you have added. ","date":"2024-03-01","objectID":"/en/hello-git/:6:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#pushing-changes"},{"categories":["hobby"],"content":"\r7 BranchingBranches are used to isolate feature development. When you create a repository, main is the “default” branch. Develop features on other branches, and merge them into the main branch upon completion. Create a branch called “feature_x” and switch to it: git checkout -b feature_x Switch back to the main branch: git checkout main Delete the newly created branch: git branch -d feature_x Your branch will not be visible to others unless you push it to a remote repository: git push origin \u003cbranch\u003e ","date":"2024-03-01","objectID":"/en/hello-git/:7:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#branching"},{"categories":["hobby"],"content":"\r8 Updating and MergingTo update your local repository to the latest changes, run: git pull to both fetch and merge changes from the remote into your working directory. To merge another branch into your current branch (e.g. main), run: git merge \u003cbranch\u003e In both cases, git will attempt to merge the changes automatically. Unfortunately, this doesn’t always work, and you may get conflicts. You will then need to edit the files and merge the conflicts manually. Once you’re done, you need to mark them as successfully merged by running: git add \u003cfilename\u003e Before merging changes, you can preview the differences using: git diff \u003csource_branch\u003e \u003ctarget_branch\u003e ","date":"2024-03-01","objectID":"/en/hello-git/:8:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#updating-and-merging"},{"categories":["hobby"],"content":"\r9 TaggingCreating tags for software releases is considered best practice. The concept is a relic from the past, notably used in SVN. You can create a tag called 1.0.0 by running: git tag 1.0.0 1b2e1d63ff 1b2e1d63ff is the first 10 characters of the commit ID you want to tag. You can obtain the commit ID using: git log You can also use less of the commit ID prefix, as long as it points uniquely. ","date":"2024-03-01","objectID":"/en/hello-git/:9:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#tagging"},{"categories":["hobby"],"content":"\r10 Overriding Local ChangesIf you’ve made a mistake (which of course never happens), you can override local changes using the following command: git checkout -- \u003cfilename\u003e This will replace the file in your working directory with the latest from HEAD. Changes staged in the index, as well as new files, will not be affected. If you want to discard all your local changes and commits, and get the latest history from the server, and point your local master branch to that: git fetch origingit reset --hard origin/master ","date":"2024-03-01","objectID":"/en/hello-git/:10:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#overriding-local-changes"},{"categories":["hobby"],"content":"\rTips and TricksBuilt-in graphical git: gitk Get colorful git output: git config color.ui true Only show single line entry for each commit when showing history: git config format.pretty oneline Interactively add files to the index: git add -i ","date":"2024-03-01","objectID":"/en/hello-git/:0:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#tips-and-tricks"},{"categories":["hobby"],"content":"\r1 Links and Resources","date":"2024-03-01","objectID":"/en/hello-git/:1:0","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#links-and-resources"},{"categories":["hobby"],"content":"\r1.1 Graphical Clients GitX (L) (OSX, open source) Tower (OSX) Source Tree (OSX, free) GitHub for Mac (OSX, free) GitBox (OSX, App Store) ","date":"2024-03-01","objectID":"/en/hello-git/:1:1","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#graphical-clients"},{"categories":["hobby"],"content":"\r1.2 Guides and Manuals Git Community Book Pro Git Think Like a Git A Visual Guide to Git ","date":"2024-03-01","objectID":"/en/hello-git/:1:2","series":["blog"],"tags":["git"],"title":"Hello Git","uri":"/en/hello-git/#guides-and-manuals"},{"categories":["hobby"],"content":"Learn to create a Hugo site in minutes.","date":"2024-02-17","objectID":"/en/hello-hugo/","series":["blog"],"tags":["hugo"],"title":"Hello Hugo","uri":"/en/hello-hugo/"},{"categories":["hobby"],"content":"Learn to create a Hugo site in minutes. ","date":"2024-02-17","objectID":"/en/hello-hugo/:0:0","series":["blog"],"tags":["hugo"],"title":"Hello Hugo","uri":"/en/hello-hugo/#"},{"categories":["hobby"],"content":"\r1 PrerequisitesBefore you begin this tutorial you must: Install Hugo (extended edition, v0.112.0 or later) Install Git You must also be comfortable working from the command line. ","date":"2024-02-17","objectID":"/en/hello-hugo/:1:0","series":["blog"],"tags":["hugo"],"title":"Hello Hugo","uri":"/en/hello-hugo/#prerequisites"},{"categories":["hobby"],"content":"\r2 Create a site","date":"2024-02-17","objectID":"/en/hello-hugo/:2:0","series":["blog"],"tags":["hugo"],"title":"Hello Hugo","uri":"/en/hello-hugo/#create-a-site"},{"categories":["hobby"],"content":"\r2.1 Commands If you are a Windows user: Do not use the Command Prompt Do not use Windows PowerShell Run these commands from PowerShell or a Linux terminal such as WSL or Git Bash PowerShell and Windows PowerShell are different applications. Verify that you have installed Hugo v0.112.0 or later. hugo version Run these commands to create a Hugo site with the Ananke theme. The next section provides an explanation of each command. hugo new site quickstart cd quickstart git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke echo \"theme = 'ananke'\" \u003e\u003e hugo.toml hugo server View your site at the URL displayed in your terminal. Press Ctrl + C to stop Hugo’s development server. ","date":"2024-02-17","objectID":"/en/hello-hugo/:2:1","series":["blog"],"tags":["hugo"],"title":"Hello Hugo","uri":"/en/hello-hugo/#commands"},{"categories":["hobby"],"content":"\r2.2 Explanation of commandsCreate the directory structure for your project in the quickstart directory. hugo new site quickstart Change the current directory to the root of your project. cd quickstart Initialize an empty Git repository in the current directory. git init Clone the Ananke theme into the themes directory, adding it to your project as a Git submodule. git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke Append a line to the site configuration file, indicating the current theme. echo \"theme = 'ananke'\" \u003e\u003e hugo.toml Start Hugo’s development server to view the site. hugo server Press Ctrl + C to stop Hugo’s development server. ","date":"2024-02-17","objectID":"/en/hello-hugo/:2:2","series":["blog"],"tags":["hugo"],"title":"Hello Hugo","uri":"/en/hello-hugo/#explanation-of-commands"},{"categories":["hobby"],"content":"\r3 Add contentAdd a new page to your site. hugo new content posts/my-first-post.md Hugo created the file in the content/posts directory. Open the file with your editor. +++ title = 'My First Post' date = 2024-01-14T07:07:07+01:00 draft = true +++ Notice the draft value in the front matter is true. By default, Hugo does not publish draft content when you build the site. Learn more about draft, future, and expired content. Add some Markdown to the body of the post, but do not change the draft value. +++ title = 'My First Post' date = 2024-01-14T07:07:07+01:00 draft = true +++ ## Introduction This is **bold** text, and this is *emphasized* text. Visit the [Hugo](https://gohugo.io) website! Save the file, then start Hugo’s development server to view the site. You can run either of the following commands to include draft content. hugo server --buildDrafts hugo server -D View your site at the URL displayed in your terminal. Keep the development server running as you continue to add and change content. When satisfied with your new content, set the front matter draft parameter to false. Hugo’s rendering engine conforms to the CommonMark specification for Markdown. The CommonMark organization provides a useful live testing tool powered by the reference implementation. ","date":"2024-02-17","objectID":"/en/hello-hugo/:3:0","series":["blog"],"tags":["hugo"],"title":"Hello Hugo","uri":"/en/hello-hugo/#add-content"},{"categories":["hobby"],"content":"\r4 Configure the siteWith your editor, open the site configuration file (hugo.toml) in the root of your project. baseURL = 'https://example.org/' languageCode = 'en-us' title = 'My New Hugo Site' theme = 'ananke' Make the following changes: Set the baseURL for your production site. This value must begin with the protocol and end with a slash, as shown above. Set the languageCode to your language and region. Set the title for your production site. Start Hugo’s development server to see your changes, remembering to include draft content. hugo server -D Most theme authors provide configuration guidelines and options. Make sure to visit your theme’s repository or documentation site for details. The New Dynamic, authors of the Ananke theme, provide documentation for configuration and usage. They also provide a demonstration site. ","date":"2024-02-17","objectID":"/en/hello-hugo/:4:0","series":["blog"],"tags":["hugo"],"title":"Hello Hugo","uri":"/en/hello-hugo/#configure-the-site"},{"categories":["hobby"],"content":"\r5 Publish the siteIn this step you will publish your site, but you will not deploy it. When you publish your site, Hugo creates the entire static site in the public directory in the root of your project. This includes the HTML files, and assets such as images, CSS files, and JavaScript files. When you publish your site, you typically do not want to include draft, future, or expired content. The command is simple. hugo To learn how to deploy your site, see the hosting and deployment section. ","date":"2024-02-17","objectID":"/en/hello-hugo/:5:0","series":["blog"],"tags":["hugo"],"title":"Hello Hugo","uri":"/en/hello-hugo/#publish-the-site"},{"categories":null,"content":"\rFree Website Building - Basics\rBased on Hugo + Github + CloudFlare\rRead more...\r","date":"2024-02-16","objectID":"/en/showcase/:0:0","series":null,"tags":null,"title":"Showcase","uri":"/en/showcase/#"},{"categories":null,"content":"  DoIt is a clean, elegant but advanced blog theme for Hugo developed by HEIGE-PCloud. It is based on the LoveIt Theme, LeaveIt Theme and KeepIt Theme. ","date":"2019-08-02","objectID":"/en/about/:0:0","series":null,"tags":null,"title":"About DoIt","uri":"/en/about/#"},{"categories":null,"content":"\r1 Features","date":"2019-08-02","objectID":"/en/about/:1:0","series":null,"tags":null,"title":"About DoIt","uri":"/en/about/#features"},{"categories":null,"content":"\r1.1 Performance and SEO  Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed Insights  Optimized SEO performance with a correct SEO SCHEMA based on JSON-LD  Google Analytics supported  Fathom Analytics supported  Baidu Analytics supported  Umami Analytics supported  Plausible Analytics supported  Search engine verification supported (Google, Bind, Yandex and Baidu)  CDN for third-party libraries supported ","date":"2019-08-02","objectID":"/en/about/:1:1","series":null,"tags":null,"title":"About DoIt","uri":"/en/about/#performance-and-seo"},{"categories":null,"content":"\r1.2 Appearance and Layout / Responsive layout / Light/Dark mode  Globally consistent design language  Pagination supported  Easy-to-use and self-expanding table of contents  Multilanguage supported and i18n ready  Beautiful CSS animation ","date":"2019-08-02","objectID":"/en/about/:1:2","series":null,"tags":null,"title":"About DoIt","uri":"/en/about/#appearance-and-layout"},{"categories":null,"content":"\r1.3 Social and Comment Systems  Gravatar supported by Gravatar  Local Avatar supported  Up to 64 social links supported  Up to 28 share sites supported  Disqus comment system supported by Disqus  Gitalk comment system supported by Gitalk  Valine comment system supported by Valine  Waline comment system supported by Waline  Facebook comments system supported by Facebook  Telegram comments system supported by Comments  Commento comment system supported by Commento  Utterances comment system supported by Utterances  Twikoo comment system supported by Twikoo  Vssue comment system supported by Vssue  Remark42 comment system supported by Remark42  giscus comment system supported by giscus  Artalk comment system supported by Artalk ","date":"2019-08-02","objectID":"/en/about/:1:3","series":null,"tags":null,"title":"About DoIt","uri":"/en/about/#social-and-comment-systems"},{"categories":null,"content":"\r1.4 Extended Features  Search supported by algolia or Fuse.js  Twemoji supported  Automatically highlighting code  Copy code to clipboard with one click  Images gallery supported by lightgallery.js  Extended Markdown syntax for Font Awesome icons  Extended Markdown syntax for ruby annotation  Extended Markdown syntax for fraction  Mathematical formula supported by $ \\KaTeX $  Diagrams shortcode supported by mermaid  Interactive data visualization shortcode supported by ECharts  Mapbox shortcode supported by Mapbox GL JS  Music player shortcode supported by APlayer and MetingJS  Bilibili player shortcode  Kinds of admonitions shortcode  Custom style shortcode  Custom script shortcode  Animated typing supported by TypeIt  Cookie consent banner supported by cookieconsent … ","date":"2019-08-02","objectID":"/en/about/:1:4","series":null,"tags":null,"title":"About DoIt","uri":"/en/about/#extended-features"},{"categories":null,"content":"\r2 LicenseDoIt is licensed under the MIT license. Check the LICENSE file for details. Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css autocomplete.js algoliasearch Fuse.js object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt $ \\KaTeX $ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine Waline Twikoo Vssue cookieconsent Remark42 ","date":"2019-08-02","objectID":"/en/about/:2:0","series":null,"tags":null,"title":"About DoIt","uri":"/en/about/#license"},{"categories":null,"content":" You are not connected to the Internet, only cached pages will be available. ","date":"0001-01-01","objectID":"/en/offline/:0:0","series":null,"tags":null,"title":"Offline","uri":"/en/offline/#"}]